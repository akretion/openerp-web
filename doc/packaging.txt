==========================================
OpenERP Web Client packaging peculiarities
==========================================

Duplication of efforts in setup.py and Manifest.in
==================================================

As you may note in reading the packaging files of the Web Client,
there are severe redundancies between sections of the ``setup.py``
file and the ``MANIFEST.in`` file.

These are due to the very variable behavior of ``distutils`` commands
in the face of these data:

* ``distutils.core.setup`` has a ``data_files`` keyword argument whose
  purpose is the listing of the non-code files to distribute, and the
  location where they should be put in the produced package.

  * ``setup.py install`` uses this list to know which files to carry
    over
  * py2exe uses this as well to determine which files it should
    move into the ``dist_dir``, directly in that directory
  * but ``setup.py sdist`` completely ignores ``data_files`` and
    instead relies on the content of the ``MANIFEST.in`` file to know
    what to port where
  * *unless* it is used on a Python 2.7 installation *and* there is no
     ``MANIFEST.in`` file (at all). In that case, ``sdist`` will
     respect ``data_files``

  Because the web client supports Python 2.5 up, the latter is not an
  option. Creating a custom parser & translator (or trying to find out
  where it lives in the distribution) for ``MANIFEST.in`` was deemed
  non-viable at this point, and thus ``find_data_file`` was born (a
  very simple function able to find and filter files in directories
  and return them in the format ``data_files`` expects)

* ``distutils.core.setup`` also has a ``scripts`` keyword argument
  which is a list of scripts to install. Because py2exe can generate a
  number of executable target types, it ignores ``scripts`` and
  instead wants a ``console`` kwarg for the same purpose.

* ``distutils.core.setup`` has a ``package_data`` keyword
  argument. This is used to list non-code files within Python (code)
  packages, using a mapping from python packages (dotted notation) to
  a list of globbing paths.

  * ``setup.py install`` uses this specification to bundle non-code
    files in the package it installs into your site-package
  * ``sdist`` behaves very similarly to how it behaves when faced with
    ``data_files``: it completely ignores the specification and
    requires a ``MANIFEST.in`` file, *unless* you're using Python 2.7
    and *do not* have a ``MANIFEST.in`` template at all.
  * py2exe entirely ignores ``package_data`` and doesn't include any
    of the specified files in its output, neither as a toplevel file
    tree nor as part of the output archive.

    This resulted in the ``PackageDataCollector`` class in
    ``py2exe_utils`` which extends ``py2exe`` to bundle
    ``package_data`` files into the archive produced by py2exe.

Data Files
==========

The Web Client not only has a number of purely data files (e.g. this
documentation), but for packaging purposes it treats its bundled
addons (those which are not distributed as part of an installed
server-side module) as data files as well.

Among other things, this means the web client addons sit in a
directory outside the archive generated by py2exe.
